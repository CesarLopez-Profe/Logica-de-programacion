            DecimalFormat formato = new DecimalFormat("#.#");
            /* 
            //DECLARACION VECTOR CON TAMAÑO
            int[] v_valores = new int[10];

            //LO NORMAL ES USAR CICLOS FOR PARA ARREGLOS
            //LLENAR EL VECTOR CON ALEATORIOS
            for(byte pos = 0; pos < v_valores.length; pos++){
                v_valores[pos] = (int)(Math.random()*100000);

            }

            //RECORRER EL VECTOR E IMPRIMIR LOS ELEMENTOS

            for(byte pos = 0; pos < v_valores.length; pos++){
                System.out.print(v_valores[pos] + "\t");

            }
            System.out.println();
            for(byte pos = (byte)(v_valores.length-1); pos>=0; pos--){
                System.out.print(v_valores[pos] + "\t");
            }

            //MATRICES
            String[][] m_vehiculos = new String[3][4];

            boolean[][] m_tablero = {{true,false,false},
                                    {true,true,true},
                                    {false,true,false}};
         
            float[][] m_mediciones = {{(float)Math.random()*10, (float)Math.random()*10},
                                    {(float)Math.random()*10, (float)Math.random()*10},
                                    {(float)Math.random()*10, (float)Math.random()*10},
                                    {(float)Math.random()*10, (float)Math.random()*10},
                                    {(float)Math.random()*10, (float)Math.random()*10},
                                    };
                                    
            //RECORRER LA MATRIZ
            System.out.println();
            for(byte fil=0;fil<=m_mediciones.length-1;fil++){

                for(byte col = 0; col <= m_mediciones[0].length-1; col++){
                    System.out.print(formato.format(m_mediciones[fil][col]) + "\t");
                }
                System.out.println();
            }
            */
            
            //Rotación del vector
            String[] v_premios = {"Tv UHD 4.0 50¨ ", "Patineta Eléctirca", "PlayStation", "Portátil"};

            byte cant_rotaciones = 35;
            String aux;

            for (byte rot =1; rot <= cant_rotaciones; rot++){

                aux = v_premios[v_premios.length-1];

                for(byte pos = (byte)(v_premios.length-2); pos >=0; pos--){

                    v_premios[pos+1] = v_premios[pos];
                }

                v_premios[0] = aux;

                System.out.println("Rotación " + rot + "t" + v_premios.toString());
                System.out.println("Rotación " + rot + "t" + Arrays.toString(v_premios));
                

            }


//Sopa de letras

public class App {

    static String[] v_palabras = {"pendiente","hilo","mayoria","peso","nariz","campos","liana","mercado","raza","pila","dos", "murcielagos"};
    static char[][]sopa = {{'p','m','m','e','r','c','a','d','o','i'},
                            {'e','d','z','s','p','o','d','g','o','r'},
                            {'n','a','r','i','z','r','l','m','a','s'},
                            {'d','k','g','a','y','i','u','a','d','a'},
                            {'i','f','q','o','z','r','l','y','e','d'},
                            {'e','j','r','u','a','a','t','o','t','f'},
                            {'n','a','t','f','h','a','d','r','h','r'},
                            {'t','p','f','w','i','y','r','i','s','h'},
                            {'e','a','i','n','l','b','s','a','v','u'},
                            {'z','n','r','l','o','s','d','f','q','p'},
                            {'a','u','f','n','a','v','d','g','u','e'},
                            {'l','e','f','m','c','a','m','p','o','s'},
                            {'j','d','o','l','q','c','l','d','i','o'},
                            {'u','a','l','i','a','n','a','a','m','l'},
                            };


    public static void main(String[] args) {
        
        try{
            System.out.println(Hallar_horizontal());

        }
        catch(Exception error){
            System.out.println("Ocurrio un error " + error.toString());
        }
    }


    public static String Hallar_horizontal() throws Exception{

        try {

            String txt_retornar = "", palabra="";

            //Recorrer el vector
            for(int pos_pal =0; pos_pal <= v_palabras.length-1;pos_pal++){

                    //validar si la palabra en el vector puede ser hallada en las filas de la sopa de letras
                    if (v_palabras[pos_pal].length() > sopa[0].length)
                        txt_retornar += "La palabra " + v_palabras[pos_pal] + " tiene un tamaño mayor que las columnas de la sopa\n";
                    else {
                        //Recorrer la matriz horizontalmente (por filas)

                    for(int fil = 0; fil <= sopa.length-1; fil++){

                        //Recorrer las columnas las veces que sea posible de acuerdo con la long de la palabra a buscar

                        for (int col = 0; col <= sopa[0].length - v_palabras[pos_pal].length(); col++){

                            //concatenamos la cantidad de caracteres de la sopa igual al tamaño de la palabra en el vector
                            for (int pos_car = col; pos_car < v_palabras[pos_pal].length()+col;pos_car++){
                                palabra += "" + sopa[fil][pos_car];
                            }

                            //al terminar el for más interno tenemos una palabra para validar
                            if(palabra.equals(v_palabras[pos_pal]))
                                txt_retornar += v_palabras[pos_pal] + " está en la posición " + (fil+1) + "-" + (col+1) + " de la sopa \n";
                            
                            palabra = "";

                        }

                    }
                    
                }

            }

            return txt_retornar;
            
        } 
        
        catch (Exception e) {
            throw new Exception ("Ocurrió un erorr en hallar horizontal \n" + e.toString());
        }

    }

    public String getGreeting() {
        return "Hello World!";
    }

}